name: License

on:
  schedule:
  - cron: "0 0 * * 1"
  workflow_dispatch:

env:
  # License
  ULF_FILE: Unity_v2021.x.ulf
  # Project
  UNITY_VERSION: 2021.3.30f1

jobs:
  request_alf:
    name: Request .alf file ðŸ”‘
    runs-on: ubuntu-latest
    outputs:
      alf: ${{ steps.output.outputs.alf }}
    steps:
      - name: Request manual activation file
        id: alfFile
        uses: game-ci/unity-request-activation-file@v2

      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.alfFile.outputs.filePath }}
          path: ${{ steps.alfFile.outputs.filePath }}

      - name: Output
        id: output
        run: |
          echo "::set-output name=alf::${{ steps.alfFile.outputs.filePath }}"
          
  acquire_ulf:
    needs: [request_alf]
    name: Acquire .ulf file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Request .alf file ðŸ”‘
        id: alfFile
        uses: game-ci/unity-request-activation-file@v2
        with:
          unityVersion: ${{ UNITY_VERSION }}
     
      - name: Activate unity
        id: ulfFile
        uses: ./
        with:
          unity-username: ${{ secrets.UNITY_USERNAME }}
          unity-password: ${{ secrets.UNITY_PASSWORD }}
          unity-authenticator-key: ${{ secrets.UNITY_AUTHENTICATOR_KEY }}
          unity-alf-path: ${{ steps.alfFile.outputs.filePath  }}  

      - name: Read ulf
        id: ulfRead
        uses: juliangruber/read-file-action@v1.1.4
        with:
          path: ${{ steps.ulfFile.outputs.filePath }}

      - name: Update secret UNITY_LICENSE
        uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: 'UNITY_LICENSE'
          value: '${{ steps.ulfRead.outputs.content }}'
          token: ${{ secrets.ACCESS_TOKEN }}
