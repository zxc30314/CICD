
name: Unity Bulid

on:
  pull_request: 
     branches: [ "CICD" ]
  push:
    branches: [ "CICD" ]
    
  workflow_dispatch:
   inputs:
    version:
      required: true
      type: string
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  PROJECT_PATH: .

jobs:
  checklicense:
    name: check if UNITY_LICENSE is set in github secrets
    runs-on: self-hosted
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        run: |
            echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
            echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"
  activation:
    needs: [checklicense]
    if: needs.checklicense.outputs.is_unity_license_set == 'false'
    name: Update License ðŸ”‘
    runs-on: self-hosted
    steps:
     - uses: actions/checkout@master
     - name: Update License
       uses: ./.github/workflows/Activation.yml

  test:
    needs: [checklicense]
    uses: ./.github/workflows/Test runner.yml

  build:
    needs: [checklicense]
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
         # - StandaloneOSX
         # - StandaloneWindows
          - StandaloneWindows64
         # - StandaloneLinux64
         # - iOS
         # - Android
          # See https://github.com/game-ci/docker/issues/53 webgl will be supported in editor image v0.9
          # - WebGL
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      # https://github.com/game-ci/unity-builder/releases/
   
      - uses: game-ci/unity-builder@v2.1.0
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          targetPlatform: ${{ matrix.targetPlatform }}
          
      - name: zip bulid file
        run: zip -r '${{matrix.targetPlatform}}.zip' ${{env.PROJECT_PATH}}/build/${{matrix.targetPlatform}}
        
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HHmmSS
          utcOffset: "+08:00"
          
      - name: move build file to sever
        run: cp ${{matrix.targetPlatform}}.zip /tmp/build
      - uses: bxb100/action-upload-webdav@v1
        with:
          webdav_address: ${{secrets.WEBDAV_ADDRESS}}
          webdav_username: ${{secrets.WEBDAV_USERNAME}}
          webdav_password: ${{secrets.WEBDAV_PASSWORD}}
          webdav_upload_path: "/${{ steps.current-time.outputs.formattedTime}}"
          files: '${{matrix.targetPlatform}}.zip'
          
      - name: Declare some variables
        if: ${{!cancelled()}}
        id: vars
        shell: bash
        run: |
          sha_short=$(git rev-parse --short HEAD)
          sha=$(git rev-parse HEAD)
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$sha_short"
          echo "::set-output name=message::$(git log -1 --no-merges --pretty=%B)"
          echo "::set-output name=username::$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{github.event.repository.full_name}}/commits/$sha | jq -r '.author.login')"
          echo "::set-output name=url::https://github.com/${{github.event.repository.full_name}}/commit/$sha"
          
      - name: Get Current Job Log URL
        if: ${{!cancelled()}}
        uses: Tiryoh/gha-jobid-action@v0
        id: jobs
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          job_name: "Build for ${{ matrix.targetPlatform }}"
       
      - name: The job has Success
        if: ${{success()}}
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          embed-title: "[${{github.event.repository.name}}:${{github.ref_name}}] has been deployed."
          embed-url: "${{secrets.WEBDAV_ADDRESS}}/${{ steps.current-time.outputs.formattedTime}}/${{matrix.targetPlatform}}.zip"
          embed-description: "[``${{steps.vars.outputs.sha_short}}``](${{steps.vars.outputs.url}}) ${{steps.vars.outputs.message}} -${{steps.vars.outputs.username}}"
          embed-color: 7506394
          avatar-url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          username: GitHub
          embed-author-name: ${{github.event.sender.login}}
          embed-author-url: ${{github.event.sender.html_url}}
          embed-author-icon-url: ${{github.event.sender.avatar_url}}
          
      - name: The job has failed
        if: ${{failure()}}
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          embed-title: "[${{github.event.repository.name}}:${{github.ref_name}}] ${{github.workflow}} failure"
          embed-url: "${{steps.jobs.outputs.html_url}}"
          embed-description: "[``${{steps.vars.outputs.sha_short}}``](${{steps.vars.outputs.url}}) ${{steps.vars.outputs.message}} -${{steps.vars.outputs.username}}"
          embed-color: 16711680
          avatar-url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          username: GitHub
          embed-author-name: ${{github.event.sender.login}}
          embed-author-url: ${{github.event.sender.html_url}}
          embed-author-icon-url: ${{github.event.sender.avatar_url}}
        
        
          
          
