name: Git Commit Info

on:
  pull_request:
    types:
      - opened
      - synchronize


jobs:
  declare_variables:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [Windows, Linux]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3


    - name: Declare some variables for Linux
      if: ${{ !cancelled() && runner.os == 'Linux' }}
      shell: bash
      run: |
        commit_message=$(git log -1 --no-merges --pretty=%B)
        echo "commit_message=$commit_message" >> $GITHUB_ENV

    - name: Declare variables based on Pull Request event type for Linux
      if: ${{  !cancelled() && runner.os == 'Linux' && github.event_name == 'pull_request' }}
      shell: bash
      run: |
          sha_short=$(echo "$sha" | cut -c 1-7)
          branch_ref="${GITHUB_REF#refs/heads/}"
          converted_ref=$(echo "$branch_ref" | sed -n 's|refs/pull/\([0-9]*\)/merge|pull/\1|p')
          sha=${{ github.event.pull_request.head.sha }}
          echo "sha_short=$sha_short" >> "$GITHUB_ENV"
          echo "url=https://github.com/${{ github.event.repository.full_name }}/$converted_ref/commits/$sha" >> "$GITHUB_ENV"
          echo "username=$(curl -H 'Accept: application/vnd.github.v3+json' -H "Authorization: Bearer ${{secrets.ACCESS_TOKEN}}" https://api.github.com/repos/${{ github.event.repository.full_name }}/commits/$sha | jq -r '.author.login')" >> "$GITHUB_ENV"
          echo $url
    - name: Declare variables based on Push event for Linux
      if: ${{  !cancelled() && runner.os == 'Linux' && github.event_name == 'push' }}
      shell: bash
      run: |
          sha=${{ github.sha }}
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "url=https://github.com/${{ github.event.repository.full_name }}/commit/$sha" >> "$GITHUB_ENV"
          echo "username=$(curl -H 'Accept: application/vnd.github.v3+json' -H "Authorization: Bearer ${{secrets.ACCESS_TOKEN}}" https://api.github.com/repos/${{ github.event.repository.full_name }}/commits/$sha | jq -r '.author.login')" >> "$GITHUB_ENV"
    
    - name: Declare variables for Windows
      if: ${{!cancelled() && runner.os == 'Windows' }}
      shell: powershell
      run: |
            $commit_message = $(git log -1 --no-merges --pretty=%B)
            Write-Host "commit_message=$commit_message" >> $env:GITHUB_ENV
              
    - name: Declare variables based on Pull Request event type for Windows 
      if: ${{ !cancelled() && runner.os == 'Windows' && github.event_name == 'pull_request'}}
      shell: powershell  # 使用 PowerShell 作为 shell
      run: |
            $branch_ref = $env:GITHUB_REF -replace '^refs/heads/', ''
            $converted_ref = ($branch_ref -replace '^refs/pull/(\d+)/merge$', 'pull/$1')
            Write-Host "converted_ref=$converted_ref" >> $env:GITHUB_ENV
            $sha = ${{ github.event.pull_request.head.sha }}
            $sha_short = $sha.Substring(0, 7)
            Write-Host "sha_short=$sha_short" >> $env:GITHUB_ENV
            $url = "https://github.com/${{ github.event.repository.full_name }}/$converted_ref/commits/$sha"
            Write-Host "url=$url" >> $env:GITHUB_ENV
            $username = (Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.event.repository.full_name }}/commits/$sha" -Headers @{ "Authorization" = "Bearer $env:ACCESS_TOKEN" }).author.login
            Write-Host "username=$username" >> $env:GITHUB_ENV
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} 
        
    - name: Declare variables based on Push event for Windows on Push
      if: ${{  !cancelled() && runner.os == 'Windows' && github.event_name == 'push' }}
      shell: powershell
      run: |
            $sha_short = git rev-parse --short $env:GITHUB_SHA
            $url = "https://github.com/${{ github.event.repository.full_name }}/commit/$env:GITHUB_SHA"
            $username = (Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.event.repository.full_name }}/commits/$env:GITHUB_SHA" -Headers @{ "Authorization" = "Bearer $env:ACCESS_TOKEN" }).author.login
            Write-Host "sha_short=$sha_short" >> $env:GITHUB_ENV
            Write-Host "url=$url" >> $env:GITHUB_ENV
            Write-Host "username=$username" >> $env:GITHUB_ENV
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} 

    - name: Print Variables
      run: |
          echo "sha_short=$env.sha_short"
          echo "message=$env.commit_message"
          echo "username=$env.username"
          echo "url=$env.url"
