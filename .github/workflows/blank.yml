# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [  ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HHmmSS
          utcOffset: "+08:00"
          
      - name: Create file
        run: |
          echo "${{toJson(github.event)}}" > events.json
          
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          sha_short=$(git rev-parse --short HEAD)
          sha=$(git rev-parse HEAD)
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$sha_short"
          echo "::set-output name=message::$(git log -1 --no-merges --pretty=%B)"
          echo "::set-output name=username::$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{github.event.repository.full_name}}/commits/$sha | jq -r '.author.login')"
          echo "::set-output name=url::https://github.com/${{github.event.repository.full_name}}/commit/$sha"
          
      # Runs a set of commands using the runners shell
      - name: Discord notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          filename: events.json
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          embed-title: "[${{github.event.repository.name}}:${{github.ref_name}}] has been deployed."
          embed-url: "${{secrets.WEBDAV_ADDRESS}}/${{ steps.current-time.outputs.formattedTime}}/${{matrix.targetPlatform}}.zip"
          embed-description: "[``${{steps.vars.outputs.sha_short}}``](${{steps.vars.outputs.url}}) ${{steps.vars.outputs.message}} -${{steps.vars.outputs.username}}"
          embed-color: 7506394
          avatar-url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          username: GitHub
          embed-author-name: ${{github.event.sender.login}}
          embed-author-url: ${{github.event.sender.html_url}}
          embed-author-icon-url: ${{github.event.sender.avatar_url}}
          
          
